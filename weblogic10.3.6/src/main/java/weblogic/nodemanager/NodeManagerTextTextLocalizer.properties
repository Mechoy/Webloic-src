version=1.0
L10nPackage=weblogic.nodemanager
I18nPackage=weblogic.nodemanager
subsystem=Node Manager

cmdFailedSvr=The script execution command {0} for server {1} returned a failure exit code. Check the node manager logs for more information.
cmdFailedSvrReason=Could not execute command {0} for server {1} via the Node Manager - reason: {2}. Check the node manager logs for more information.
cmdTimedOut=The script execution command {0} for server {1} failed to execute in under {2} milliseconds. Check the node manager logs for more information. Please make sure the script properly exits. If the script requires more time to complete, the timeout value is configurable in the nodemanager.properties file.
msgServerSuspending=Server - {0} - is being suspended.
msgShuttingDown=Shutting down Server {0} ...
msgShutDown=Server was shut down normally
msgStarting=Starting WebLogic server with command line: {0}
msgStartingType=Starting {0} server with command line: {1}
msgStarted=Server {0}::{1} started, process id = {2,number}
msgKilling=Killing server (pid = {1})
msgKilled=Server was killed
msgEmptyTemplate=CreateProcess: failed with empty template file.
msgWrongJava={1} is not available at {2}/bin as specified in Remote Args for Server {0}, trying to start the Server with default javaHome set with Node Manager.
msgFoundBootIdFile=Found existing BootIdentityFile {0}, deleting..
msgErrorMonProcFile=Could not open internal monitored process registry file {0}.
msgErrorSavedLogsDir=Could not create saved logs directory {0}.. NodeManager exiting..
msgErrorIntLogDir=Could not create internal log directory {0}.. NodeManager exiting..
msgErrorSvrInfo=Internal Error, could not retrieve internal server information for Server {0}, unable to update monitoring parameters..
msgErrorUpdtFile=Internal Error, could not update properties file for Server {0}.
msgErrorSvrInfoFile=Could not find internal server information file, cannot resume monitoring of Server {0}.
msgErrorSvrMonState=Internal Error: Could not determine restartability of Server {0}, not resuming monitoring.
msgErrorRecovery=Internal Error during recover of monitored Server {0}.
msgErrorFoundFile=Found existing BootIdentityFile {0} for Server {1}:{2}, overwriting..
msgErrorFileMissing=File not found \"{0}\"
msgErrorFileCreate=I/O error while creating file \"{0}\"
msgErrorFileWrite=I/O error while writing to file \"{0}\"
msgErrorFileClose=I/O error while closing file \"{0}\"
msgInfoRestarting=Server failed so attempting to restart (restart count = {0})
msgErrorRestarting=Internal Error while trying to restart Server {0}, stopping monitoring..
msgSvrShutdown=Server {0} has been shutdown, stopping monitoring..
msgErrorQueryTimeout=Health check request to Server {0} timed out, server being deemed failed..
msgErrorRestart=Server {0} may not have restarted, possibly due to some Resource/System/Application problem. Please check the server log for details. Node Manager health monitoring being stopped..
msgInfoKillingFailed=Attempting to kill failed Server {0} ..
msgErrorKillFailed=Unable to kill failed Server {0}, stopping monitoring ..
msgWarnIgnoreTimeoutFailed=Server {0} has not been configured to be killable upon failure, so ignoring failure..
msgErrorQueryFailed=Health check request to Server {0} failed, server being deemed failed..
msgWarnIgnoreFailed=Server failed but will not be restarted because auto restart is disabled
msgErrorUnexpected=Unexpected error while monitoring server
msgInfoRestarted=Server {0} verified to have restarted successfully..
msgWarnRestartMax=Server failed but will not be restarted because the maximum number of restart attempts has been exceeded
msgErrorCheckHealth=Unable to check Server {0} health - {1}. Stopping monitoring..
msgErrorUpdateRegistry=Internal Error, unable to update Server {0} registry, continuing..
msgErrorRetrieval=Unable to retrieve restart parameters for Server {0} from the Admin Server - {1}. Continuing with restart using locally cached information..
msgErrorHostVerifier=HostVerifier: isHostTrusted failed - {0}.
msgInfoPlainListen=PlainSocketListener: listening on {0}..
msgErrorPlainListenFail=PlainSocketListener: failed to start listening on {0} : {1}.
msgErrorPlainAcceptFail=PlainSocketListener: socket accept failed on {0}..
msgInfoSecureListen=SecureSocketListener: listening on {0}..
msgErrorSecureListenFail=SecureSocketListener: Could not setup context and create a secure socket on {0} : {1}.
msgErrorSecureAcceptFail=SecureSocketListener: socket accept failed on {0}..
msgInfoStarting=Starting Node Manager...
msgInfoUsage=For information on command line options, try \"weblogic.NodeManager help\"".
msgInfoDebug=Setting debugLevel to {0,number}..
msgInfoNative=Setting nativeVersionEnabled to {0}..
msgInfoListenerType=Setting listenerType to {0}..
msgErrorNonSecure=NodeManager cannot be started in non-secure mode.. exiting..
msgInfoListenAddr=Setting listenAddress to {0}..
msgInfoListenPort=Setting listenPort to {0,number}..
msgInfoStartTemplate=Setting startTemplate to {0}..
msgInfoTrustedHosts=Setting trusted hosts file to {0}..
msgInfoReverseDns=Setting reverseDnsEnabled to {0}..
msgInfoHostVerif=Setting sslHostNameVerificationEnabled to {0}..
msgInfoWLHome=Setting WebLogic home to {0}..
msgInfoBEAHome=Setting BEA home to {0}..
msgInfoScavangerSecs=Setting scavangerDelaySeconds to {0,number}..
msgErrorNMCmdFailedNoPort=Could not execute command {0} on the Node Manager, reason - no valid listen port specified for this Node Manager. Please specify a valid port on its Configuration screen.
msgErrorNMCmdFailedFileCreate=Could not execute command {0} on the Node Manager, reason - unable to create file {1} under directory {2}.
msgErrorNMCmdFailedReason=Could not execute command {0} on the Node Manager, reason - {1}.
msgErrorNotify=Unable to notify Admin Server of Server {0} death, reason: {1}.
msgWarnOldPortProp=This property \"weblogic.nodemanager.listenPort\" has been deprecated, please start using the new property \"weblogic.ListenPort\"..
msgWarnOldAddrProp=This property \"weblogic.nodemanager.listenAddress\" has been deprecated, please start using the new property \"weblogic.ListenAddress\"..
msgErrorUnsuppCipher=SecureSocketListener: enabled Cipher Suite is unsupported in this context. NodeManager exiting..
msgErrorSockClose1=OutputHandler: done1 socket close failed, reason: {0}.
msgErrorSockClose2=OutputHandler: done2 socket close failed, reason: {0}.
msgSvrHostsMigSvcs=Server {0} hosts Migratable Services, stopping monitoring..
msgNativeKillFailed=Native ''offline'' call failed for {0}::{1} with Process ID = {2,number}. Server might have crashed.
msgErrorNodeManagerPropertiesOpenFailed=Failed to open the file {0} because of exception {1}. Check that the file has read/write access
msgErrorNodeManagerPropertiesCloseFailed=Failed to close the file {0} because of exception {1}
msgErrorNodeManagerPropertiesWriteFailed=Failed to re-write the file {0} because of exception {1}
msgErrorRequiredNodeManagerPropertyNotSet=The required {1} property was not set in the file {0}
msgErrorIllegalNodeManagerKeyStoresPropertyValue=The {1} property in the file {0} was set to the illegal value \"{2}\". The legal values are {3}
msgErrorIllegalNodeManagerProperty=The file {0} contains an illegal property \"{1}\".\n The legal properties are : {2}
msgErrorFileNotFound=The file {0} does not exist
msgErrorUnknownKeyStoreType=Unknown keystore type \"{0}\". Exception was {1}. Check that the keystore provider is properly installed in the JDK
msgErrorLoadKeyStoreCertificateException=Unable to load certificates into memory for keystore {0} of type {1} because of exception {2}. Check that the keystore provider is properly installed in the JDK
msgErrorLoadKeyStoreNoSuchAlgorithmException=Unable to locate a required algorithm for keystore {0} of type {1} because of exception {2}. Check that the keystore provider is properly installed in the JDK
msgErrorLoadKeyStoreIOException=Failed to load the keystore file {0} of type {1} because of IO exception {2}. Check that the filename, type and passphrase are correctly configured. Note that some keystore types (eg. JKS) don''t require a passphrase for read-access
msgErrorFileCloseFailed=Failed to close the file {0} because of exception {1}
msgErrorUnknownIdentityAlias=The key entry \"{1}\" was not found in the keystore {0}. Check that the keystore contains a key entry that matches the CustomIdentityAlias property in NodeManager.properties
msgErrorIdentityAliasNotKeyEntry=The alias \"{1}\" was for a trusted CA entry (it should have been a key entry) in the keystore {0}. Check that the keystore contains a key entry that matches the CustomIdentityAlias property in NodeManager.properties
msgErrorKeyNotPrivateKey=The key under the alias {0} in keystore {1} is not a private key
msgErrorFindPrivateKeyNoSuchAlgorithmException=Unable to a find the private key under the alias {0} in keystore {1} because of exception {2}. Check that the keystore provider is properly installed in the JDK
msgErrorFindPrivateKeyUnrecoverableKeyException=Unable to a find the private key under the alias {0} in keystore {1} because of exception {2}. Check that the CustomIdentityPrivateKeyPassPhrase property in NodeManager.properties is correct
msgErrorUnexpectedKeyStoreException=Unexpected keystore exception {1} when accessing keystore {0}
msgErrorCertificateNotX509Certificate=A certificate under the alias {0} in keystore {2} is not an X509 certificate: {1}
msgErrorNoTrustedCAs=There are no trusted CAs in keystore {0}
msgErrorIdentityCertificateChain=There is no certificate chain under the alias {0} in keystore {1}
msgInfoReadingIdentityFromKeyStore=Reading private key and certificate chain from the keystore {0}. KeyStore type = {1}, Using keystore passphrase = {2}, Alias = {3}
msgInfoReadingTrustedCAsFromKeyStore=Reading trusted CAs from the keystore {0}. KeyStore type = {1}, Using keystore passphrase = {2}
msgInfoReadingCertificateChainFromFile=Reading certificate chain from the file {0}
msgInfoReadingPrivateKeyFromFile=Reading private key from the file {0}
msgErrorReadCertificateChainException=Unable to read certificate chain from file {0} because of exception {1}. Check that the file has the correct contents
msgErrorReadPrivateKeyException=Unable to read private key from file {0} because of exception {1}. Check that the file has the correct contents and that the private key password, if needed, is specified properly on the command line via the weblogic.nodemanager.keyPassword property
msgErrorUnexpectedSSLContextWrapperException=Unexpected SSLContextWrapper exception {0}.
logVersionMismatchMessage=Version number in the properties file , {0}, is {1}. This does not match the current version number {2}.
logNoLibraryMessage=Node manager could not find the required library, {0}, in path - {1}
logReconfigureSSLMsg=An SSL problem was encountered while attempting to create an SSL 	connection to the node manager. Please re-configure SSL and retry.
msgSSLConnToNMestablished=An SSL connection was established successfully to the Node Manager @ 	{0}
msgListeningForCommands=Node manager agent is listening for commands from the node manager.
msgStateTransitionSent=Sent state transition message to the node manager - State : {0}
msgNMNotReachable=Node manager is not reachable. Scheduled the timer to initiate SSL connection to the Node Manager.
msgCurrentStateOfServer=Current state of the server : {0}
msgRegisteringNMAgent=Registering - {0} - for server state change notification.
msgRegisteredNMAgent=Registered - {0} - for server state change notification callback.
msgSentToNM={0} message sent to the node manager.
msgCommandListenerReady=Ready to execute commands from the node manager.
responseSentToNM=Response to command - {0} - sent to the node manager.
msgSeqNumber=Sequence number of the message - {0}
msgNoSeqNumber=No sequence number present in the message.
msgErrorNodeManagerPropertiesDecryptionFailed=Could not decrypt the {1} attribute value of {2} from the file {0}. If you have copied an encrypted attribute from another nodemanager.properties into {0}, change the encrypted attribute to its cleartext value then reboot the node manager. The attribute will be re-encrypted. Otherwise, change all encrypted attributes to their cleartext values, then reboot the node manager. All encryptable attributes will be re-encrypted. The decryption failed with the exception {3}.
msgMonitoringServer=Resume monitoring of active server process (pid = {0})
msgStartupModeUpdateSent=Message to update the startupMode to {0} sent to the node manager.
msgStartupModeUpdateFailed=Unable to update the startup mode stored in the node manager to {0}.
msgServerStateResponseFailed=Unable to send the response to the GETSTATE message of sequence number {0}.
msgRegisteringNMAgentForStartupMode=Registering - {0} - for server startup mode change notification.
msgExceptionWhileMonitoring=While monitoring - {0}, an exception was received with message - {1}
msgServerShuttingDown=Server - {0} - is shutting down.
msgRequestFailed=Failed to complete the request to start the server {0} of domain {1} in state {2}
msgRequestCancelled=The request to start the server {0} of domain {1} in state {2} was cancelled.
msgNoConnFromManagedServer=The request to start the server {0} of domain {1} failed because the node manager did not hear from the managed server in the configured timeout period. Despite this, if the managed server has not failed, it will come up and the node manager will start monitoring it. To adjust this timeout so that the task does not fail prematurely, please refer to the node manager property ScavangerDelaySeconds (Default value : 180 seconds. Current value : {2} seconds).
msgFailedToSendException=Failed to send failure message to the client, error : {1} 	Original message : {0}
msgFailedToSendCancelMessage=Failed to send request cancelled message to the client, error : {1} 	Original message : {0}
msgErrorDecrypting=Failed to decrypt the password attribute value for server {0}. If you have changed the EmbeddedLDAP or security configuration credentials, then remove the nodemanager.config file from {1} directory and restart the server.
ConvertEncryptedProps=Converting the encrypted NodeManager properties to the new encryption service.
ConvertEncryptionService=Converting to new encryption service.
EncryptionConvertDone=Encryption service conversion completed successfully.
FinishPartialESConvert=Encryption service is partially converted; finishing conversion.
DeletingOldEncryptionService=Deleting old encryption service.
NoEncryptConvert=No encryption service conversion is needed, continuing.
CheckEncryption=Checking encryption service.
ConversionError=Could not convert the {1} attribute value of {2} from the file {0} during conversion to the new encryption service. If you have copied an encrypted attribute from another nodemanager.properties into {0}, change the encrypted attribute to its cleartext value then reboot the node manager. The attribute will be re-encrypted. Otherwise, change all encrypted attributes to their cleartext values, delete the NodeManagerProperties and SerializedNodeManagerIni.dat files, then reboot the node manager. All encryptable attributes will be re-encrypted.
msgErrorConvertSvrInfoFile=Could not convert properties of server information file, will not be able to resume monitoring of Server {0}.
logServiceFound=Old encryption service found in {0}.
SleepForRestartDelay=Sleeping for {0} seconds before attempting to restart server
StartupFailedNotRestartable=Server failed during startup so will not be restarted
ServerFailedToStart=Server failed to start up. See server output log for more details.
RecoveringServerProcess=Automatically restarting server process as part of crash recovery
RotatedOutputLog=Rotated server output log to \"{0}\"
CreatingDirectory=Creating directory \"{0}\"
ErrorCreatingDirectory=Error creating directory \"{0}\"
ServerAlreadyRunning=Server is already running
ServerNotRunning=Server is not currently running
BootIdentitySaved=Boot identity properties saved to \"{0}\"
StartupPropertiesLoaded=Startup configuration properties loaded from \"{0}\"
StartupPropertiesSaved=Startup configuration properties saved to \"{0}\"
ChangeFileOwnershipSucceeded=Successfully changed file ownership for \"{0}\" to owner \"{1}\" and group \"{2}\"
ChangeFileOwnershipFailed=Unable to change file ownership for \"{0}\" to owner \"{1}\" and group \"{2}\"
scriptNotFound=Unable to find file \"{1}\" in the correct service migration script directory \"{0}\".
invalidParam=Invalid parameter \"{0}\" set to \"{1}\".
missingNetMaskProp=Automatic server migration requires the Node manager to be configured with the proper attributes and windows platforms require a NetMask value. The Interface is ''{0}'' and the NetMask is not set. Please specify the property or properties in the nodemanager.properties file. For more information on setting the appropriate server migration properties for NodeManager to properly bind and unbind the IP address, please see the Nodemanager or ServerMigration documents.
operationTimedOut=Operation ''{0}'' timed out - probable network outage
operationInterrupted=Operation ''{0}'' interrupted
domainNotSet=Domain not set
serverNotSet=Server name not set
commandNotAvailable=''{0}'' not applicable to scripted nodemanager
invalidPath=Invalid path: ''{0}''
IOInterrupted=I/O has been interrupted
unknownSHError=Unknown error (exit code = {0})
alreadyConnected=Already connected
noPassword=NM user name is set but not password
noUser=NM password is set but not user name
noConnect=Could not connect to NodeManager. Check that it is running at {0}:{1}.
endOfStream=Unexpected end of stream
unexpectedResponse=Unexpected response from server: {0}
unknownClient=Unknown client type: {0}
nullOrEmpty={0}: Null or empty
invalidHostName=Invalid host name
invalidPort=Invalid port number: {0}
invalidDomain=Invalid domain name
invalidDomainDir=Invalid domain directory
invalidServerName=Invalid server name
invalidNMHome=Invalid node manager home directory
invalidUser=Invalid node manager user name
invalidPwd=Invalid node manager password
invalidScriptPath=Invalid script path
DomainInitError=There was a problem initializing the domain ''{0}'' at ''{1}''. Please make sure that this domainName: ''{0}'' is registered and is fully enrolled for this nodemanager at: ''{1}''.
DynamicDomainRegistrationNotAllowed=The domain ''{0}'' at ''{1}'' was not registered in the nodemanager.domains file and dynamic domain registration is not supported. Please register the domain in the nodemanager.domains file.
scriptExecutionFailure=The script ''{0}'' failed with exit code ''{1}''.
invalidCommand=Invalid command name ''{0}''
invalidIntProperty=Invalid integer value for property ''{0}''
getPropertiesFileNotFound=Node manager user properties file ''{0}'' not found
getPropertiesFileNotWritable=Node manager user properties file ''{0}'' not writable
getDomainDirNotFound=Domain directory ''{0}'' not found
invalidDomainSalt=Domain directory ''{0}'' invalid (domain salt file not found)
saltFileNotFound=Domain salt file not loaded but required for user authentication
errorLoadingSalt=Error while loading domain salt file
getDataFileNotFound=Nodemanager encryption service data file not found under {0}
invalidDataFile=Invalid nm data file format: {0}
enctyptionServiceFailure=Could not initialize node manager encryption service
uncaughtHandlerException=Uncaught exception in server handler
errorClosingSocket=I/O error while closing socket connection
disabledCommand=Disabled command: {0}
invalidCommandSyntax=Invalid {0} command syntax
domainError=Configuration error while reading domain directory
domainIOError=I/O error while reading domain directory
serverDirIOError=I/O error while reading server directory
quitMsg=NodeManager signing off
setDomainMsg=Current domain set to ''{0}''
domainCredChgMsg=Domain credentials changed for doamin {0}
srvrPropsUpdate=Server properties updated for ''{0}''
errorWritingConfig=Exception while writing server config for ''{0}''
serverDirError=Configuration error while reading server directory
srvrMsg=Current server is now ''{0}''
nmUserMsg=NM usr set to ''{0}''
passError=Must set USER first
authError=Access to domain ''{0}'' for user ''{1}'' denied
passMsg=Password accepted
outputLogNotFound=Server output log file not found: ''{0}''
serverLogFile=Server output log file sent
nmLogFile=Node manager log file sent
scriptMsg=Script ''{0}'' executed
scriptError=Error while executing script
serverStarted=Server ''{0}'' has already been started
serverStartError=Exception while starting server ''{0}''
serverStartedMsg=Server ''{0}'' started
serverStopped=Server ''{0}'' is not currently running
serverStopError=Exception while killing server ''{0}''
serverKilled=Server ''{0}'' killed
domainNull=Must set domain first
serverNull=Must set server first
authNull=Must login to a domain first
greeting={0} started
inheritedSocket=Inherited serversocket {0}
plainListenerStarted=Plain socket listener started on port {0}
plainListenerStartedHost=Plain socket listener started on port {0}, host {1}
failedConnection=Plain socket listener on port {0}, host {1}: failed to accept an incoming connection
rotatedMsg=Rotated server error log to ''{0}''
rotatedErrorLogMsg=Server error log also redirected to server log
rotationError=Could not rotate server output log file (rename from ''{0}'' to ''{1}'' failed).
invalidScriptTimeout=Invalid script timeout value ''{0}'' for property ''{1}''
invalidLogLevel=Invalid log level value ''{0}'' for property ''{1}''
formatterError=Could not load log formatter: {0}
nativeLibraryLoadError=Native version is enabled but nodemanager native library could not be loaded
nativeLibraryNA=Native version is enabled but node manager native library is not available on this platform
removingProp=Removing node manager property: {0}
addingProp=Adding node manager property: {0}={1}
invalidPropValue=Invalid ''{0}'' property value: {1}
settingVersion=Setting node manager properties version to {0}
reloadingDomainsFile=Re-loading domains file: {0}
invalidDomainsFile=Invalid domains file format: {0}
domainsNotFound=Domains file not found: {0}
errorReadingDomainsFile=Error reading domains file: {0}
loadingDomainsFile=Loading domains file: {0}
stdoutErrStreams=Unable to redirect standard output and error streams to {0} and {1}
inputStream=Unable to redirect standard input stream to {0}
invalidNMPropFile={0}: Invalid node manager properties file format
errorReadingNMPropFile={0}: I/O error reading nodemanager properties config file
loadedNMProps=Loaded node manager configuration properties from ''{0}''
nmPropsNotFound=Node manager configuration properties file ''{0}'' not found. Using default settings.
savingNMProps=Saving node manager configuration properties to ''{0}''
configError=Configuration error while reading domain directory: {0}
startMonitorConfigError=Configuration error while creating and starting monitor for server process: {0}
startMonitorIOError=I/O error while creating and starting monitor for server process: {0}
fatalError=Fatal error in node manager server
unrecognizedOption=Unrecognized option: {0}
invalidArgument=Invalid argument format
serverNameNull=ServerName provided is null
domainNameNull=DomainName provided is null
badDomain=Couldn''t find or create the Domain with name ''{0}''
errorUpdatingSecretFile=An I/O error occurred while updating the node manager secret file : "{0}" after the nodemanager user and/or password were changed and activated. Access to the nodemanager with the current domain credentials will not be successful until the node manager hash is updated
unsupportedCipher=Unsupported cypher suite: {0}
secureSocketListener=Secure socket listener started on port {0}
secureSocketListenerHost=Secure socket listener started on port {0}, host {1}
upgradeToSecure=Secure socket listener upgrading inherited plain connection to SSL connection
failedSecureConnection=Secure socket listener on port {0}, host {1}: Could not accept an incoming connection
nmDataPropsMigrated=Node manager data properties migrated from ''{0}'' to ''{1}''
nmDataPropsMigrateError=Could not migrate Node manager data properties from ''{0}'' to ''{1}''
nmDataPropsRenamed=Renamed node managed data properties from ''{0}'' to ''{1}''
nmDataPropsRenameError=Could not rename node managed data properties: ''{0}''
savingUpgradedProps=Saving upgraded node manager properties to ''{0}''
nmDirError=Node manager directory does not exist or is not readable: {0}
upgradeStarted=Upgrade tool started for directory ''{0}''
domainSaltFileNotFound=Domain salt file not found
workingDirectory=Working directory is ''{0}''
outFile=Server output log file is ''{0}''
loadIDStore=Loading identity key store: {0}
unknownIDStoreType=Unknown identity key store type: {0}
idStoreNotFound=Identity key store file not found: {0}
idAlgorithmNotFound=Identity key store algorithm not found
certificatesNotLoaded=One or more certificates in identity key store could not be loaded
incorectIDPassword=Incorrect identity private key password
unknownKeyStoreID=Unknown key store identity alias or not a key entry alias: {0}
identityStoreNotInit=Identity key store not initialized
keyStoreNoCertificate=Key store identity alias does not contain a certificate chain: {0}
noX509=Not an X509 certificate
certificateFileNF=Certificate file not found: {0}
invalidCertFile=Invalid certificate file: {0}
keyFileNF=Key file not found: {0}
invalidKeyFile=Invalid key file: {0}
encryptingProp=Encrypting node manager property: {0}
hostNotSet=Host not set
invalidVMMPlugin=VMM Plugin with type="{0}" and API version="{1}" could not be found in the classpath.
msgErrorVmmNoScripting=Script execution is not available in the VMM node manager client.
msgErrorVmForServerNotFound=The virtual machine ''{0}'' for server ''{1}'' could not be found.
msgErrorVmStartPropertiesNotSupported=This command is not supported for VMM node manager clients.
invalidVmmAdapter=Invalid VMM adapter name.
invalidVmmAdapterVersion=Invalid VMM adapter version.
msgInvalidCoherenceOperationalConfigFile=The Coherence operational configuration file {0} could not be read.
vmStopped=The virtual machine ''{0}'' is not currently running.
vmAlreadyRunning=The virtual machine ''{0}'' is already running.
duplicateDomain=A Domain is already registered and stored with the location ''{1}'' and name ''{0}'' but the domains file contains a domain with name ''{2}'' and name ''{3}''. The new domain name: ''{2}'' will not be stored.
invalidRegisteredDomain=The domain name ''{0}'' and path ''{1}'' could not be registered from the nodemanager.domains file because it is invalid.
unregisteredDomainName=The domain name ''{0}'' was not found in the nodemanager.domains file. Will attempt to lookup the default domain directory for this request.
credentialsFileEmpty=The domain credentials are empty! Please run nmEnroll to properly enroll the domain on this machine or modify/reset the domain credentials.
missingSrvrMigProp=Enabling utomatic server migration requires the Node manager to be configured with the proper attributes with Interface name, IP Range, and optionally a NetMask value. There were none found that match any interface names available on this machine. Please double check your nodemanager.properties file and ensure that it specifies an Interface that is available on this machine. For more information on setting the appropriate server migration properties for NodeManager to properly bind and unbind the IP address, please see the Nodemanager or ServerMigration documents.
unknownIPRange=Unable to determine min IP and max IP in range: \"{0}\" syntax is \"interface=minIP-maxIP,NetMask=xx\". For more information on setting the appropriate server migration properties for NodeManager to properly bind and unbind the IP address, please see the Nodemanager or ServerMigration documents.
invalidNetMask=The NetMask value, \"{0}\", in the interface config entry \"{1}\" must be a properly formatted NetMask IP.

