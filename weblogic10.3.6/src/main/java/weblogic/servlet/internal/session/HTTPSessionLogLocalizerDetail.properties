prefix=WL
messagedetail100000=The user code has invoked a method, which has been deprecated.
cause100000=The method has been deprecated in the latest servlet specification.
action100000=Check the specification for an alternative. If not corrected, you might see unpredictable behavior.
messagedetail100005=Session removal failed.
cause100005=An unexpected error occurred while removing the session.
action100005=Check the exception for the exact error message.
messagedetail100006=HTTP session file persistence: storing sessions in directory: {0}. This is the directory to which HTTP sessions will be written.
cause100006=This is an information only message.
action100006=Make sure that the directory stores the sessions as per the PeristentStoreDir session parameter (weblogic.xml).
messagedetail100007=Erasing directory tree for persistent HTTP sessions: {0} - for file based persistent sessions. This will remove the directory tree from the disk.
cause100007=The storage directory is being deleted as a result of session invalidation.
action100007=Make sure that the deletion is happening while removing sessions.
messagedetail100008=Unable to delete file persistent store directory "{0}".
cause100008=Failed to delete the storage directory.
action100008=Make sure the permissions on this directory are OK. Make sure the file/directory is not in use by another process.
messagedetail100010=Session stored to persistent store.
cause100010=The container persists the modified session onto the disk after the request is served.
action100010=Make sure the path is consistent with the session parameter, PersistentStoreDir (weblogic.xml).
messagedetail100011=Serialization of the session attributes failed.
cause100011=This might be due to a change in the class definition or serialVersionUID.
action100011=Check the exception for the exact error message and take appropriate action.
messagedetail100013={0} Not invalidated. The session serialized into the file system does not exist.
cause100013=Could not find the session. Does not exist.
action100013=This session might have been deleted by a trigger in some other server, which is pointing to the same storage.
messagedetail100015=Deleted file based session persistent store file: {0}.
cause100015=This is an informational message indicating that the storage file is being deleted.
action100015=Make sure the deletion is consistent with the path defined in PersistentStoreDir (weblogic.xml)
messagedetail100016=Session expiration check failed for: {0}. Invalidating the session expiration check.
cause100016=An unexpected error occurred while checking the session for expiration.
action100016=The session will be removed from the persistent store. Check the exception for the exact error message.
messagedetail100018=Failed to load the session from the disk.
cause100018=An unexpected error occurred.
action100018=Check the exception for the exact error message. The file could be corrupted.
messagedetail100019=File-based persistent session ID: "{0}" storage file: "{1}". File exists: {2}.
cause100019=This is an informational message indicating that the session was stored in this path.
action100019=Make sure the file-based persistent session storage is consistent with PersistentStoreDir (weblogic.xml).
messagedetail100020=Problem occurred while parsing cookie.
cause100020=Could not parse the cookie properly.
action100020=Check the cookie format and the exception for the exact problem.
messagedetail100022=Session invalidation interval: {0}.
cause100022=Session invalidation trigger is being created.
action100022=Make sure the session invalidation interval is consistent with InvalidationIntervalSecs (weblogic.xml).
messagedetail100025=An unexpected error occurred in HTTP session timeout callback while deleting sessions.
cause100025=The invalidation trigger failed unexpectedly while deleting sessions.
action100025=Check the exception for probable cause.
messagedetail100026=An unexpected error was raised in HTTP session timeout callback, while checking session expiration.
cause100026=An unexpected error occurred while checking the sessions for expiration.
action100026=Check the exception for the exact error message.
messagedetail100028=Could not deserialize session data.
cause100028=Failed to deserialize session data.
action100028=Make sure the object you are putting into the session is serializable and also the non-transient object it aggregates are also serializable. If any of the non-transient objects in the entire object graph are not serializable, you will receive this error message.
messagedetail100030=HTTP session expired. Session ID {0}.
cause100030=This is an informational message indicating that the session with ID {0} has been expired.
action100030=If the session expired sooner than expected, check the SessionTimeout parameter in weblogic.xml.
messagedetail100031=This runtime MBean is used to monitor statistics for the HTTP sessions.
cause100031=Failed to remove this MBean.
action100031=Check the exception for the exact error message.
messagedetail100032=This runtime MBean is used to monitor statistics for the HTTP sessions.
cause100032=Failed to create this MBean.
action100032=Check the exception for the exact error message.
messagedetail100033=The sessions will not be replicated to other servers in the cluster.
cause100033=The license was not valid to support replicated sessions.
action100033=Check your license. You might want to upgrade it to a clustering/replication license. Alternatively, you can use file/jdbc persistence for session store reliability.
messagedetail100035=Timer invalidated session ID: {0} Web application: {1}, because it expired.
cause100035=This message was logged by the Web application level timer, which checks the sessions for expiration periodically.
action100035=If the session expired too soon, check SessionTimeout in weblogix.xml..
messagedetail100037=Creating SessionContext of type: {0} for Web application: {1}.
cause100037=This message is logged on Web application deployment.
action100037=Make sure the SessionContext type is consistent with PersistentStoreType (weblogic.xml).
messagedetail100038=Unknown persistent type: {0} for Web application: {1}. Valid types are: memory/file/replicated/jdbc/cookie/replicated_if_clustered.
cause100038=The persistent store type you specified for this Web application is not recognized.
action100038=Check the PersistentStoreType parameter in weblogic.xml. The valid values are: memory/file/replicated/cookie/jdbc/replicated_if_clustered.
messagedetail100039=Replicated HTTP sessions specified for webapp: {0}, but clustering not enabled.
cause100039=The session replication mechanism relies on clustering, which has not been configured.
action100039=Please setup clustering or change the PersistentStoreType in weblogic.xml to memory/file/jdbc/cookie
messagedetail100040=getAttribute(): {0} was a Handle, reconstructing the EJBObject
cause100040=This is an informational message indicating that the container is storing only the handle for the EJBObject placed into the session.
action100040=No action required.
messagedetail100041=setAttribute(): {0} was an EJBObject. Storing the handle into the session.
cause100041=The container found an EJB handle stored in the session. Will reconstruct the EJB object before returning.
action100041=No action required.
messagedetail100042=An error occurred while reconstructing the EJBObject: {0} put into the session.
cause100042=The container found an EJB handle stored in the session. However, it failed to reconstruct the EJBObject using that handle.
action100042=Make sure the handle is still valid. Check the exception for the exact error message.
messagedetail100043=An error occurred while finding the handle for the EJBObject: {0}.
cause100043=The container stores only the handle for an EJBObject put into session. However, in this case, it failed to find the handle.
action100043=Check the RemoteException for the exact error message details.
messagedetail100044=Found WLCookie cookie {0}={1}.
cause100044=The cookie persistence mechanism relies on setting the cookie header.
action100044=No action required.
messagedetail100045=Malformed WLCookie. Value: {0}. Ignoring.
cause100045=The cookie persistence mechanism relies on setting the cookie header.
action100045=The cookie was found to be malformed. Only strings are supported for cookie-based persistence. Also make sure you do not have characters in the attributes name/values, which can break the cookie syntax.
messagedetail100046=Creating new session with ID: {0} for Web application: {1}.
cause100046=A new session has been created.
action100046=Make sure the length is equal to the IDLen parameter in weblogic.xml.
messagedetail100047=Performing the database operation: {0} Id: {1} Web application: {2}.
cause100047=This is an informational message for JDBC-based persistence.
action100047=No action required. Meant for debugging purposes only.
messagedetail100048=Looked up ROID: {0} from host {1}:{2} for ID: {3}.
cause100048=The replicated session ID was not found in the current server. Perhaps this server is not the primary/secondary. Will try to retrieve the session from the assigned secondary if it is alive.
action100048=No action required.
messagedetail100049=Error looking up session with id:{0} - session refresh failed
cause100049=Got RemoteException looking up session from the secondary
action100049=Check if the secondary server is down. Note that it is not recommended to kill both the primary and secondary server at the same time. Remember the replication happens lazily, upon request. So if you need to bring down the secondary server too give sufficient time so that the active end users hit their sessions and they get replicated.
messagedetail100050=The current server is becoming primary for replicated session ID: {0}.
cause100050=The current server is taking the role of primary for the given session.
action100050=No action required.
messagedetail100051=The current server is becoming the secondary for replicated session ID: {0}.
cause100051=The current server is taking the role of primary for the given session.
action100051=No action required.
messagedetail100052=Unregistering replicated session ID: {0}.
cause100052=The current server is going to unregister the given session.
action100052=The session was invalidated. No action required.
messagedetail100053=Failed to update the secondary server for HTTP session ID: {0}.
cause100053=Failed to update the secondary server for the modification that occurred in the current request.
action100053=Verify the secondary server is alive, and make sure the objects put into the session are all serializable. Also, check the exception for the exact error message.
messagedetail100054=Failed to find the secondary server for HTTP session ID: {0}.
cause100054=Unable to find the secondary server for the replicated session.
action100054=Verify the clustering is configured properly and there is more than one server in the cluster.
messagedetail100055=The generated session ID: {0} contains a reserved keyword. Regenerating.
cause100055=On win32, if the session ID contains a reserved keyword, the file-based persistence fails. This is because it relies upon successful creation of subdirectories.
action100055=No action required. The session ID will be regenerated. The reserved words are: "CON", "PRN", "AUX", " NUL" "COM1", "COM2", "COM3", " COM4", "COM5", "COM6", "COM7", " COM8", "COM9", "LPT1", "LPT2", " LPT3", "LPT4", "LPT5", "LPT6", " LPT7", "LPT8", "LPT9"}, "CLOCK$"
messagedetail100056={0}: The session with ID: {1} was invalidated before the session creation and registration could complete.
cause100056=This is a past-release problem.
action100056=Contact Oracle Customer Support and file a bug report.
messagedetail100057=This server does not have deployment for the Web application with context path: {0}. The callback: {1} failed while replicating the session. Check your configuration; only uniform configurations in a cluster are supported.
cause100057=WebLogic clustering relies on uniform Web application deployment across the cluster. It seems the Web application was not deployed on all the servers.
action100057=Redeploy the Web application, and make sure it targets the cluster/all members in the cluster.
messagedetail100058=PersistentStoreType for the Web application with context path: {0} is not replicated. The callback: {1} failed while replicating the session. Check your configuration; only uniform configurations in a cluster are supported.
cause100058=WebLogic Server clustering relies on uniform Web application deployment across the cluster. It seems the Web application was not deployed on all the servers with uniform configuration.
action100058=Redeploy the Web application, and make sure it targets the cluster/all members in the cluster. Also the PersistentStore type should be set to "replicated" for all cluster members.
messagedetail100059=An unexpected error occurred while cleaning up sessions during undeployment of Web application: {0}.
cause100059=The trigger failed to cleanup the expired session.
action100059=Check the exception for the exact error message. When using JDBC-based HTTP session persistence, make sure the database is set up properly. For file-based persistence, make sure the permissions on the storage directory are appropriately set.
messagedetail100060=An unexpected error occurred while retrieving the session for Web application: {0}.
cause100060=Failed to retrieve the session from persistent store.
action100060=Check your configuration, and check the exception for the exact error message. Also, check the WebLogic Server documentation for more details about how to configure session persistence for Web applications.
messagedetail100061=Web application: {0} tried to place a non-serializable attribute: {1} into the session: {2}. This attribute will be lost upon redeployment. This message is logged only once per session.
cause100061=The session.setAttribute(name, value) was invoked with a non-serializable value for memory-based sessions.
action100061=If you want the session data to survive redeployment, make sure all attributes are serializable. Otherwise, the non-serializable data will be lost upon redeployment.
messagedetail100062=Web application: {0} tried to place a non-serializable attribute: {1} into the session: {2}. This attribute will be lost upon redeployment or session failover. Also, such attributes will be scoped to the current server only and will not be replicated to the secondary server. This message is logged only once per session.
cause100062=The session.setAttribute(name, value) was invoked with a non-serializable value for a replicated session.
action100062=If you want the session data to survive redeployment and session failovers, make sure all attributes are serializable. Otherwise, the non-serializable data will be lost upon failover/redeployment.
messagedetail100063=Web application: {0} tried to place a non-serializable attribute: {1} into the session: {2}. This attribute will be lost upon redeployment or session failover. Also, such attributes will be scoped to the current server only and will not be persisted to the disk. This message is logged only once per session.
cause100063=The session.setAttribute(name, value) was invoked with a non-serializable value for a file-based persistent session.
action100063=If you want the session data to survive redeployment and session failovers, make sure all the attributes are serializable. Otherwise, the non-serializable data will be lost upon failover/redeployment.
messagedetail100064=Web application: {0} tried to place a non-serializable attribute: {1} into the session: {2}. The attribute will be lost upon redeployment or session failover. Also, such attributes will be scoped to the current server only and will not be persisted to the database. This message is logged only once per session.
cause100064=The session.setAttribute(name, value) attribute was invoked with a non-serializable value for a JDBC-based persistent session.
action100064=If you want the session data to survive redeployment and session failovers, make sure all the attributes are serializable. Otherwise, the non-serializable data will be lost upon failover/redeployment.
messagedetail100065={0}. Failed to remove attributes for HTTP session ID: {1}.
cause100065=An unexpected error occurred during HTTP session invalidation.
action100065=Check the error message for the exact cause.
messagedetail100066=Failed to lookup the replicated session object for Web application: {0}, session ID: {1}.
cause100066=The ReplicationManager returned the NotFoundException.
action100066=This happens if the object has been cleaned up underneath or the version number does not match with the secondary object. This should not happen normally. Unwanted failovers at the front-end can cause unnecessary session failovers in the backend, which could result in this error in certain situations. Check the error for more information.
messagedetail100067=Failed to lookup the secondary information for Web application: {0} session ID: {1}.
cause100067=The ReplicationManager returned the NotFoundException.
action100067=This happens if the object has been cleaned up underneath or the version number does not match with the secondary object. This should not happen normally. Unwanted failovers at the front-end can cause unnecessary session failovers in the backend, which could result in this error in certain situations. Check the error for more information.
messagedetail100068=Failed to lookup the secondary information for Web application: {0} session ID: {1}.
cause100068=The ReplicationManager failed to lookup the secondary information for a valid session.
action100068=This is an unexpected error. Check the error message for details.
messagedetail100069=getAttribute(): {0} was a HomeHandle, reconstructing the EJBHome
cause100069=This is an informational message indicating that the container is storing only the handle for the EJBHome placed into the session.
action100069=No action required.
messagedetail100070=Error reconstructing the EJBHome put into session for name: {0}
cause100070=The container found an EJBHome handle stored in the session. However, it failed to reconstruct the EJBHome using that EJBHome handle.
action100070=Make sure the HomeHandle is still valid. Check the exception for the exact error message.
messagedetail100071=setAttribute(): {0} was an EJBHome, storing the HomeHandle into the session
cause100071=The container found an EJBHome handle stored in the session. Will reconstruct the EJBHome object before returning.
action100071=No action required.
messagedetail100072=Error in finding the homeHandle for the EJBHome: {0}
cause100072=The container stores only the handle for an EJBHome put into session. However, in this case, it failed to find the HomeHandle.
action100072=Check the RemoteException for the exact error message details.
messagedetail100073=Exception while Serializing Session Object: {0}
cause100073=Failed to Serialize Session Object.
action100073=Check the Exception for the exact error message details.
messagedetail100088=HTTPSession attribute: "{0}" is not serializable.
cause100088=The session attribute {0} is not serializable. Session attributes should either implement java.io.Serializable, java.io.Externalizable or java.rmi.Remote.
action100088=Objects in session should be serializable if you wish to persist HTTPSession state on disk/memory.
messagedetail100077=HTTPSession attribute: "{0}" is of size {1} bytes.
cause100077=Informational message.
action100077=No action required.
messagedetail100078=HTTPSession with id: "{0}" is of size {1} bytes.
cause100078=Informational message.
action100078=No action required.
messagedetail100079=In order to failover sessions across cluster, you have to specify backupcluster address and/or JDBCTxDataSource to store session state For futher, please refer to WebLogic server documentation
cause100079=Misconfiguration.
action100079=Please set JDBCTxDataSource and/or backup cluster address.
messagedetail100081=Persistent store settings cannot be changed between versions. The persistent store settings for application {0} is different from the settings for previous version(s).
cause100081=The persistent store settings of the new version is different from previous versions.
action100081=Please make sure that the persistent store settings are not changed when deploying a new version of an application.
messagedetail100082=Failed to deploy {0}. Missing JDBC DataSource. Please target a JDBC DataSource to the cluster
cause100082=Incomplete configuration.
action100082=Please target a JDBC DataSource to the cluster and refer to cluster documentation for more information.
messagedetail100083=The webapp: {0} in application: {1} has PersistenceStoreType set to: {2} for http sessions, but the target list does not contain all members of cluster: {3}. Inhomogeneous deployment for replicated sessions is not allowed.
cause100083=Inhomogeneous deployment for replicated sessions is not allowed. The target list must be a cluster or a virtual host which is targeted to a cluster.
action100083=Please fix the targets that you have chosen for this web application. Please specify cluster or VirtualHost as the target.
messagedetail100084=The webapp: {0} in application: {1} has PersistenceStoreType set to: {2} for http sessions, but the target list contains a virtual-host: {3} for which the target list does not contain all members of cluster: {4}. Inhomogeneous deployment for replicated sessions is not allowed.
cause100084=Inhomogeneous deployment for replicated sessions is not allowed. The target list must be a cluster or a virtual host which is targeted to a cluster.
action100084=Please fix the targets that you have chosen for this web application. Please specify cluster or VirtualHost as the target.
messagedetail100087=The jdbc session data for session id: {0} has been modified by another server in the cluster.
cause100087=The front end webserver failed to maintain server affinity.
action100087=Please ensure that the front end webserver or load-balancer has been properly configured.
messagedetail100090=An unexpected error occurred while doing a batched update of last accessed time attribute of updated sessions in application {0}
cause100090=Check the exception message for details.
action100090=Check the exception message for details.
messagedetail100091=\n{0}\n Context Path\t: {1}\n HttpSession ID\t: {2}\n Attribute Name\t: {3}\n Previous Value\t: {4}\n Current Value\t: {5}\n
cause100091=debug info.
action100091=debug info.
messagedetail100092=Dumping session:\n{0}\n
cause100092=debug info.
action100092=debug info.
messagedetail100093=\n{0}\n Context Path\t: {1}\n HttpSession ID\t: {2}\n
cause100093=debug info.
action100093=debug info.
messagedetail100094=The session id: {0} has been accessed from {1}, a server that is not the primary ({2}). Repeated occurrences of this can cause memory problems and performance degredation, as sessions are loaded into memory on more than two servers at a time.
cause100094=The most likely cause is a configuration error on a front end hardware loadbalancer or webserver plugin. They should be configured to respect the values of primary/secondary in the cookie (i.e., stickiness), when possible.
action100094=Please ensure that the front end webserver or load-balancer has been properly configured.
messagedetail100095=The global JDBC connection pool reserve timeout seconds is changed when JDBC Session Context initialize. The value is set to be default value (120s) or the value of <jdbc-connection-timeout-secs> in <session-descriptor> which defined in weblogic.xml or weblogic-application.xml, and the jdbc-connection-timeout-secs is deprecated. This issue will be fixed in the future release.
cause100095=The global JDBC connection pool reserve timeout seconds is changed because the connection pool is initialized again when JDBC Session Context initialize.
action100095=Please ensure that the value of <jdbc-connection-timeout-secs> in <session-descriptor> which defined in weblogic.xml or weblogic-application.xml has been properly configured.

