version=1.0
L10nPackage=weblogic.webservice.dd.verify
I18nPackage=weblogic.webservice.dd.verify
subsystem=WebService Compliance

noHandlerChainName=ERROR: A handler-chain was defined in the web services deployment descriptor without a Name attribute or with an empty Name attribute. Handler Chains must include a name.
noHandlerClassName=ERROR: The handler-chain {0} contains a handler without a class-name attribute. Every handler must contain a class-name attribute.
noHandlersInChain=The handler-chain {0} does not contain any handlers.
doesntExtendHandler=ERROR: The handler class: {1} from handler-chain: {0} does not extend weblogic.webservice.Handler. All handler classes must extend weblogic.webservice.Handler.
cantLoadHandlerClass=ERROR: The handler class: {1} from handler-chain: {0} could not be loaded. Please ensure that this class name is correct and is included in the web service.
handlerNeedsDefaultCtor=ERROR: The handler class: {1} from handler-chain: {0} does not have a public, no-argument constructor.
javaComponentClassNotFound=ERROR: The java component class: {1} from the component named: {0} could not be loaded.
javaComponentNeedsDefaultCtor=ERROR: The java component class: {1} from the component named: {0} does not have a public, no-argument constructor.
mustSpecifyJNDIOrEJBLink=The EJB component named: {0} does not specify a JNDI name or an EJB link. An EJB component must specify a JNDI name or an EJB link.
couldntFindEJBLink=ERROR: The EJB component named: {0} specified an ejb-link to {1}, but this ejb-link could not be found in JNDI. Please ensure that this ejb-link refers to a valid EJB, and this EJB has already deployed. The exception was: {2}
couldntFindJNDIName=ERROR: The EJB component named: {0} specified a JNDI name: {1}, but this name could not be found in JNDI. Please ensure that this JNDI name refers to a valid EJB, and this EJB has already deployed. The exception was: {2}
ejbLinkWasNotEJBHome=ERROR: The EJB component named: {0} specified an ejb-link: {1}, but this ejb-link resolves to a JNDI name that does not refer to an EJBHome. Please ensure that the destination EJB exists, and this ejb-link points to an object implementing javax.ejb.EJBHome.
jndiNameWasNotEJBHome=ERROR: The EJB component named: {0} specified a JNDI name: {1}, but this resolves to a JNDI name that does not refer to an EJBHome. Please ensure that the destination EJB exists, and this JNDI name points to an object implementing javax.ejb.EJBHome.
ejbLinkWasNotStateless=ERROR: The EJB component named: {0} specified an ejb-link: {1}, but the target EJB is not a stateless session EJB.
jndiNameWasNotStateless=ERROR: The EJB component named: {0} specified a JNDI name: {1}, but this JNDI name does not refer to a stateless session EJB.
noWebServices=ERROR: There were no web services defined in this module.
noFileOrDirectorNamed=ERROR: The file or directory provided [{0}] does not exist or could not be read.
noReadPermission=ERROR: The file or directory provided [{0}] was found, but it could not be read. Please check the permission on this file or directory and ensure that it can be ready by this process.
unrecognizedFileType=ERROR: The file named: {0} was found, but its format could not be recognized. Please ensure that its filename ends with .ear, .war, or .xml
complianceCheckerHelp=INFORMATION: The goal of the Compliance Checker to allow the user to catch and correct build time problems induced during the creation, implementation or configuration of the Webservice, rather than at deploy time. By definition, this tool in intended to verify the contract between the developer and the implicit WLS Webservice runtime environment. The web services may be verified from a WAR file, an EAR file, or a directory containing an extracted EAR or WAR file.
noFilesGiven=weblogic.webservice.tools.cchecker.ComplianceChecker (EAR, WAR, or expanded directory)
invalidArgsGiven=ERROR: Invalid command arguments given to the Compliance Checker.
normalCompletion=All messages have been reported, the ComplianceChecker has ended normally.
noWebServiceMbean=ERROR: Could not create the required WebService Context for the given file [{0}].
noWebServiceClassLoader=ERROR: Could not create the required WebService ClassLoader for the given file [{0}].
couldNotFindWARinEAR=ERROR: Could not locate the WebService WAR file in the given EAR file [{0}].
returnParamIsNotAllowed=ERROR: Reliable delivery cannot be set for operation [{0}] that contains return parameter.

