type.process.error=\
There was an error compiling. \
{0}

type.field.nonStatic=\
Any data in the field "{0}" should not be specific to \
the caller of this service. Values in this field will \
not be consistent across operations or event handlers \
on this class.

type.ejb.notAllowed=\
Web service {0} cannot be an EJB because it uses one of the following annotations: {1}.

type.field.notStub=\
The field "{0}" annotated with weblogic.jws.ServiceClient must be a sub class of weblogic.wsee.jaxrpc.StubImpl.

type.field.noServiceClient=\
The weblogic.jws.security.CallbackRolesAllowed annotation on field {0} is only allowed along with weblogic.jws.ServiceClient annotation.

type.callback.noCallbackService=\
weblogic.jws.CallbackService Annotation must be present on {0}.

type.callback.operationNameChanged=\
java.jws.WebMethod cannot change the operation name from {1} to {2} on the callback interface {0}.

type.ei.jaxws.rpcEncodedNotSupported=\
RPC/Encoded web services are not supported by JAX-WS.

type.ei.declaresCallbackService=\
Web service {0} must not declare weblogic.jws.CallbackService Annotation.

type.callback.invalidTargetNamespace=\
The callback service {0} must have the same target namespace of {1} as the web service {2}.

type.callback.conversationStartNotAllowed=\
Method {1} on callback service {0} cannot start a conversation.

parameter.callback.invalidHolder=\
Parameter {0} in method {1} on callback service {2} is a holder.  Holders on a callback service is not supported.

parameter.binding.nonUniqueParameterElementName=\
Parameter {0} has an element QName( {1} ) which is not unique for method {2}.

type.webMethods.none=\
A WebService must have at least one WebMethod.

type.pkg.upperCasedPackage=\
The type {0} is in a package with uppercase characters.  This type may have problems compiling and running in some operating systems. \
It is strongly recommended that the package name be lowercase.

type.class.SBNotFound=\
There was no service implementation bean found.

type.class.isNotPublic=\
WebService must be public.

type.class.isAbstract=\
WebService must not be abstract.

type.class.isFinal=\
WebService must not be final.

type.class.unknown=\
Class {0} is unknown.

type.class.noDefaultConstructor=\
WebService must have a public no argument contructor.

type.class.hasFinalize=\
WebService must not declare finalize().
            
type.operationName.duplicate=\
Operation name "{0}" is already defined.

type.package.missing=\
A jws should have a package declaration.

type.handlerchain.duplicate=\
A WebService that declares javax.jws.HandlerChain must not declare \
javax.jws.soap.SOAPMessageHandlers

type.handlerchain.classNotFound=\
The handler class {0} could not be found

type.handlerChain.jaxws.soapMessageHandlersNotSupported=\
SOAPMessageHandlers are declared on {0}.  These are not supported on JAX-WS web services.

type.handlerChain.jaxws.nameSpecified=\
HandlerChain.name should not be specified on {0}.  It is not used on JAX-WS web services.

type.conversation.notSerializable =\
Conversational WebServices must implement the java.io.Serializable interface.

type.conversational.invalidMaxAge =\
Conversational maxAge is invalid. {0}

type.conversational.invalidMaxIdleTime =\
Conversational maxIdleTime is invalid. {0}

type.handlerChain.chainNotFound =\
Could not find handler chain "{0}" in {1}.

type.handlerChain.chainFileNotValid =\
Handler chain file validation error for file: {0}. {1}

type.handlerChain.chainFileParseError =\
Could not parse handler chain file: {0}. {1}.

type.handlerChain.malformedUrl =\
Invalid file attribute "{0}" for javax.jws.HandlerChain: {1}.

type.callback.moreThanOne=\
There is more than one field marked as callback in service class {0}.

type.ports.jaxws.notHttp=\
Only HTTP ports are supported for JAX-WS.

type.ports.jaxws.moreThanOne=\
Only one port is supported for JAX-WS.

type.ports.moreThanOne=\
Only one transport is supported.

type.ports.portNameNotUnique=\
The {0} transport portName "{1}" is not unique.

type.ports.uriNotUnique=\
The URI "{0}" is already defined for this service.

type.ports.contextPathServiceUriNotUnique=\
Multiple ports may not share the same contextPath and serviceUri "{0}".

type.ports.callback.contextPathServiceUriNotUnique=\
ContextPath and serviceUri "{0}" is used by more than one port.  It must be unique when a callback is used.

type.ports.contextPathNotIdentical=\
All transport's contextPath must be identical in a webapp Web Service.

type.ei.MethodNotImplemented=\
Endpoint interface method "{0}" must be implemented in the Web Service.

type.ei.ParameterNotSupport=\
Endpoint interface method "{0}" does not support the parameter "{1}" in the Web Service. \
Mostly the type of the parameter is illegal or unsupported.

type.ei.ResultNotSupport=\
Endpoint interface method "{0}" does not support the return type in the Web Service. \
Mostly the type is illegal or unsupported.

type.sb.EICheck=\
A WebService that defines an endpointInterface may only include javax.jws.WebService.serviceName, \
javax.jws.WebService.wsdlLocation and javax.jws.WebService.targetNamespace.

type.provider.noWebServiceProvider=\
javax.jws.ws.WebServiceProvider Annotation must be present on {0}.

type.provider.noWsdlLocation=\
javax.jws.ws.WebServiceProvider.wsdlLocation is required for Provider based web service {0}.

type.provider.ProviderNotImplemented=\
The javax.jws.ws.WebServiceProvider web service {0} must implement {1}.

type.provider.notJAXWS=\
The javax.jws.ws.WebServiceProvider web service {0} must marked as a JAX-WS web service.

type.sb.noWebService=\
javax.jws.WebService Annotation must be present on {0}.

type.sb.noCallbackMethod=\
The weblogic.jws.security.CallbackRolesAllowed annotation on Method {0} is only allowed along with weblogic.jws.CallbackMethod annotation.

type.sb.EIInvalid=\
javax.jws.WebService.endpointInterface {0} is invalid.

type.sb.wsdlLocationDeclaredTwice=\
javax.jws.WebService.wsdlLocation is declared differently on Service Endpoint Interface and Service Implementation.

type.ei.noEI=\
javax.jws.WebService.endpointInterface {0} was not found in the sourcepath or classpath.

type.ei.noWebService=\
javax.jws.WebService Annotation must be present on {0}.

type.ei.EINotInterface=\
javax.jws.WebService.endpointInterface {0} must be an interface.

type.ei.EIDeclaresEI=\
EndpointInterface {0} must not declare javax.jws.WebService.endpointInterface.

type.ei.EIDeclaresServiceName=\
EndpointInterface {0} must not declare javax.jws.WebService.serviceName.

type.cow.noWsdlLocation=\
javax.jws.WebService.wsdlLocation must be set if using a compiled wsdl.

type.callback.annotationNotAllowed=\
The annotation {0} is not allowed on callback interface {1}.

type.callback.annotationNotAllowed.dependent=\
The annotation {0} is not allowed on {1} when the parent web service does not declare a {2} annotation.

annotation.notAllowed=\
The annotation {0} is not allowed on {1} when a javax.jws.WebService.endpointInterface is used.

annotation.jaxws.notAllowed=\
The annotation {0} is not allowed on {1} because it is a JAX-WS type web service.

annotation.jaxws.ei.notAllowed=\
The annotation {0} is not allowed on {1} because it is an endpoint interface of JAX-WS type web service.

annotation.jaxrpc.notAllowed=\
The annotation {0} is not allowed on {1} because it is a JAX-RPC type web service.

annotation.Conversation.check.wsdl=\
Fail to check whether wsdl contains conversation transition phases.

annotation.Conversation.notAllowed=\
The Conversation annotation is not allowed on jws file when compiledWsdl option is specified and the wsdl contains conversation transition phases.

annotation.Policy.notAllowed=\
The Policy and Policies annotations are not allowed on jws file when compiledWsdl option is specified.

annotation.WLSPolicy.OWSMSecurityPolicy.notAllowed=\
The annotations {0} and {1} are not allowed to exist at the same time.

method.notPublic=\
WebMethod "{0}" must be public.

method.soapBinding.duplicate=\
The method {0} declares both {1} and {2} annotation.  There should be only one.

method.soapBinding.different=\
The method {0} declares both {1} and {2} annotation with different settings.

method.bare.invalidNumberOfParameters=\
A Document Bare style operation must have exactly one non header IN or INOUT Parameter.

method.bare.invalidNumberOfResults=\
A Document Bare style operation must have exactly one non header OUT or INOUT Parameter or a return value.

method.bare.mustBeOneway=\
A Document Bare style operation must be declared Oneway if it returns void.

method.oneway.mustReturnVoid=\
Method contains the javax.jws.Oneway annotation, but is not declared \
void.  Oneway methods must be declared void.

method.oneway.noOutputAllowed=\
Method contains the javax.jws.Oneway annotation, but has parameters declared as WebParam.Mode.OUT or WebParam.Mode.INOUT.  \
Oneway methods must have no output.

method.noWebMethod=\
Method contains {0} annotation but is not a WebMethod. \
Add the javax.jws.WebMethod annotation to the method definition.

method.conversation.wrongNumOfPhases =\
A conversational WebService must have at least one WebMethod with a phase of "{0}".

method.buffered.void=\
Method contains the weblogic.jws.MessageBuffer annotation, but is not declared \
void.  Buffered methods must be declared void unless invoked with async request/response.

method.buffered.invalidRetryDelay=\
MessageBuffer has an invalid retryDelay. \
{0}

method.exception.onewayDeclaresChecked=\
Oneway WebMethod must not declare any checked exceptions.

method.callback.parentDuplicate=\
The callback service "{0}" and the parent WebService "{1}" use the same operation name "{2}". An alternate operation name can be specified using @WebMethod annotation

method.wildcard.anyNotAllowed=\
The method {0} on web service {1} must be doc/literal/wrapped when binding wildcards to any.

method.wsat.differentVersion=\
The WS-AT version enabled on method [{0}] is different from the one on [{1}].

method.oneway.wsatnotAllowed=\
Oneway WebMethod [{0}] should not declare WS-AT annotation.

method.wsat.ejbtransaction.invalidCombination=\
The effective WS-AT flow type "{0}" and EJB transactiona attribute type "{1}" on method [{2}] is an invalid combination.


parameter.wildcard.unboundedNotLast=\
Parameter {0} on method {1} on web service {2} is unbounded and not the last parameter.  Unbounded wildcard arrays must be the last parameter.

parameter.oneway.invalidMode=\
Oneway WebMethod must not have an INOUT or OUT Parameter.

parameter.binding.invalidModeForDoc=\
A document style operation must not have a non header INOUT or OUT Parameter.

parameter.binding.holderRequired=\
Parameter {0} must be a holder since it is OUT or INOUT.

type.soapDispatchName.duplicate=\
The operation {0} cannot be uniquely identified. An alternate operation name can be specified using @WebMethod annotation for Doc/lit/Wrapped, RPC message style or @WebParam annotation for Doc/lit/bare message style

parameter.xmlbean.invalidName=\
The name "{1}" specified in {0} is different to the XmlBean name of "{2}".

parameter.xmlbean.invalidNamespace=\
The namespace "{1}" specified in {0} is different to the XmlBean namespace of "{2}".

parameter.binding.invalidParameter=\
The type {0} used in parameter {1} on method {2} has no default constructor and might not be able to be bound to XML.

parameter.binding.invalidReturn=\
The type {0} used in the return on method {1} has no default constructor and might not be able to be bound to XML.

result.elementName.duplicate=\
Return element "{0}" is assigned to more than one type across WebService. An alternate return element name can be specified using the @WebResult annotation.

result.jaxrpc.headerNotSupported=\
Method {0} JAX-RPC web services cannot bind the result to a header.  The result from method {0} is bound to a header.  This is not supported for JAX-RPC web services.

policy.uriInError=\
Policy uri "{0}" is invalid. {1}

policy.attachButBuiltIn=\
attachToWsdl can not be set to true for policy "{0}".

policy.bothAnnotations=\
Both Policies and Policy annotation are used, you need to put Policy within Policies.

policy.bothSecurityAnnotations=\
Both SecurityPolicies and SecurityPolicy annotation are used, you need to put SecurityPolicy within SecurityPolicies.

policy.duplicateUri=\
Duplicate uri "{0}" was found.

policy.notFound=\
Policy was not found at {0}.

policy.notValid=\
Policy referenced by {0} was not a valid policy.

policy.9.xPolicyOnJAXWS.notallowed=\
The WebLogic Server 9.x-style policy is not supported in JAX-WS web services.

policy.9.xPolicyAndWsspPolicy.MixUp.notallowed=\
The WebLogic Server 9.x-style policy and Wssp policy is not allowed to mix and match.

policy.withUserDataConstraint=\
Can not use @UserDataConstraint(transport=UserDataConstraint.Transport.NONE) with @Policy.

cow.wsdl.invalid=\
Unable to load wsdl from {0}. {1}

port.cow.invalidAddressLocation=\
Invalid soap address {0}. {1}

security.noEjb=\
weblogic.jws.security.SecurityIdentity and weblogic.jws.security.SecurityRoles is not allowed on a non ejb WebService.

security.noSessionRunAs=\
Can't use both @Session and @RunAs annotations to define runAs value.

security.noSecurityRoleRefsRolesRefereneced=\
Can't use both @SecurityRoleRefs and @RolesRefereneced annotations to define security-role-ref value.

security.noRolesAllowedRoleMappings=\
Can't use both @RolesAllowed and @RoleMappings annotations to define security-role-assignment.

security.noRolesAllowedServiceEndpointMethod=\
Can't use both @RolesAllowed and @ServiceEndpointMethod annotations to define roles.

security.noAnntMethod=\
{0} is only supported at service level for POJO JWS. To use it at method level, please use EJB-implemented JWS.

security.mapToPrincipalsMissing=\
"mapToPrincipal" attribute is missing in {0}

type.backing.mixed=\
The web services in the module are using mixed backing types.  All web services must be backed the same way.

port.invalidContextPath=\
The context paths in the module must all be the same.  Web service {0} has a context path of {1}.  It should be {2}.

port.overrideContextPath=\
The context path {2} specified on port {1} of web service {0} is being overriden with {3}.

port.uri.alreadyInUse=\
The context path {0} and service uri {1} combination is already in use by service {2}.

port.protocol.unhandled=\
The protocol {0} for port {1} in service {2} cannot be inherited by callback service as it is not handled.

type.class.duplicateServiceName=\
There are multiple web services with the name {0}.  Web service names must be unique within a single module.

port.serviceUri.alreadyInUse=\
The service uri {0} for port {1} on service {2} is already in use.

bindingType.soap12=\
soap12 BindingType is not supported for rpc encoded type of webservice

bindingType.soap12.transport=\
Transport {0} is not supported for soap12 binding type.

binding.invalidType=\
Type {0} on JWS is not supported.

descriptor.invalid=\
The descriptor is not valid: {0}

types.unresolved=\
Could not resolve annotated alternative type {0} from WebMetod {1}.

types.invalid.noRelationship=\
The WebMethod "{0}" with a declared type of "{1}" has an annotated alternative type of "{2}".  The declared type "{1}" and the annotated alternative type "{2}" must have an inheritance relationship between them.

binding.innerTypes=\
Inner Classes are not supported on a JWS: {0}

binding.javaBeanWithXmlBeanPropertyOrField=\
A java class "{0}" is being used as a parameter or return type that contains a property or field that is an XmlBean "{1}", this is not allowed.

unsupported.enumTypes=\
Enum Types are not supported on a JWS: {0}

method.rpc.xmlBeanNotSupported=\
RPC/Literal style operation must not have xmlBean parameter or return type

method.jaxws.xmlBeanNotSupported=\
JAX-WS web services must not have xmlBean parameter or return type

unique.qname.service=\
Service QName "{0}" must be unique within a module.

unique.qname.porttype=\
PortType QName "{0}" must be unique within a module.

unique.qname.port=\
Port QName "{0}" must be unique within a module.

unique.name.port=\
Local Port Name "{0}" must be unqiue to deploy the application.

port.name.not.found=\
Port name "{0}" specified by transport annotation "{1}" could not be found in compiled WSDL.

operation.name.invalid=\
wsdl:operation name "{0}" is illegal, the name must conform to NCName(http://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-NCName). Try override it with operationName property of WebMethod annotation.

MultipleSoapElements.InputParam=\
Method {0} has multiple SoapElement's as Input Param. This is not supported for JAX-RPC web services.
