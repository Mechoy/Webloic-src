R9980 = An ENVELOPE MUST conform to the structure specified in SOAP 1.1 Section 4, "SOAP Envelope" (subject to amendment by the Profile). 
R1015 = A RECEIVER MUST generate a fault if they encounter an envelope whose document element is not soap:Envelope. 
R1014 = The children of the soap:Body element in an ENVELOPE MUST be namespace qualified. 
R1008 = An ENVELOPE MUST NOT contain a Document Type Declaration. 
R1009 = An ENVELOPE MUST NOT contain Processing Instructions. 
R1033 = An ENVELOPE SHOULD NOT contain the namespace declaration xmlns:xml="http://www.w3.org/XML/1998/namespace". 
R1034 = A DESCRIPTION SHOULD NOT contain the namespace declaration xmlns:xml="http://www.w3.org/XML/1998/namespace". 
R1011 = An ENVELOPE MUST NOT have any element children of soap:Envelope following the soap:Body element. 
R1005 = An ENVELOPE MUST NOT contain soap:encodingStyle attributes on any of the elements whose namespace name is "http://schemas.xmlsoap.org/soap/envelope/". 
R1006 = An ENVELOPE MUST NOT contain soap:encodingStyle attributes on any element that is a child of soap:Body. 
R1007 = An ENVELOPE described in an rpc-literal binding MUST NOT contain soap:encodingStyle attribute on any element that is a grandchild of soap:Body. 
R1013 = An ENVELOPE containing a soap:mustUnderstand attribute MUST only use the lexical forms "0" and "1". 
R1017 = A RECEIVER MUST NOT mandate the use of the xsi:type attribute in envelopes except as required in order to indicate a derived type (see XML Schema Part 1: Structures, Section 2.6.1). 
R1032 = The soap:Envelope, soap:Header, and soap:Body elements in an ENVELOPE MUST NOT have attributes in the namespace "http://schemas.xmlsoap.org/soap/envelope/". 
R1025 = A RECEIVER MUST handle envelopes in such a way that it appears that all checking of mandatory header blocks is performed before any actual processing. SOAP12 
R1027 = A RECEIVER MUST generate a "soap:MustUnderstand" fault when an envelope contains a mandatory header block (i.e., one that has a soap:mustUnderstand attribute with the value "1") targeted at the receiver (via soap:actor) that the receiver does not understand.SOAP12 
R1028 = When a fault is generated by a RECEIVER, further processing SHOULD NOT be performed on the SOAP envelope aside from that which is necessary to rollback, or compensate for, any effects of processing the envelope prior to the generation of the fault. SOAP12 
R1029 = Where the normal outcome of processing a SOAP envelope would have resulted in the transmission of a SOAP response, but rather a fault is generated instead, a RECEIVER MUST transmit a fault in place of the response. SOAP12 
R1030 = A RECEIVER that generates a fault SHOULD notify the end user that a fault has been generated when practical, by whatever means is deemed appropriate to the circumstance. SOAP12 
R1107 = A RECEIVER MUST interpret a SOAP message as a Fault when the soap:Body of the message has a single soap:Fault child. 
R1000 = When an ENVELOPE is a Fault, the soap:Fault element MUST NOT have element children other than faultcode, faultstring, faultactor and detail. 
R1001 = When an ENVELOPE is a Fault, the element children of the soap:Fault element MUST be unqualified. 
R1002 = A RECEIVER MUST accept faults that have any number of elements, including zero, appearing as children of the detail element. Such children can be qualified or unqualified. 
R1003 = A RECEIVER MUST accept faults that have any number of qualified or unqualified attributes, including zero, appearing on the detail element. The namespace of qualified attributes can be anything other than "http://schemas.xmlsoap.org/soap/envelope/". 
R1016 = A RECEIVER MUST accept faults that carry an xml:lang attribute on the faultstring element. 
R1004 = When an ENVELOPE contains a faultcode element, the content of that element SHOULD be either one of the fault codes defined in SOAP 1.1 (supplying additional information if necessary in the detail element), or a Qname whose namespace is controlled by the fault's specifying authority (in that order of preference). 
R1031 = When an ENVELOPE contains a faultcode element the content of that element SHOULD NOT use of the SOAP 1.1 "dot" notation to refine the meaning of the fault. 
R1141 = A MESSAGE MUST be sent using either HTTP/1.1 or HTTP/1.0. 
R1140 = A MESSAGE SHOULD be sent using HTTP/1.1. 
R1132 = A HTTP request MESSAGE MUST use the HTTP POST method. 
R1108 = A MESSAGE MUST NOT use the HTTP Extension Framework (RFC2774). 
R1109 = The value of the SOAPAction HTTP header field in a HTTP request MESSAGE MUST be a quoted string. 
R1119 = A RECEIVER MAY respond with a fault if the value of the SOAPAction HTTP header field in a message is not quoted. 
R1127 = A RECEIVER MUST NOT rely on the value of the SOAPAction HTTP header to correctly process the message.SOAP12 
R1124 = An INSTANCE MUST use a 2xx HTTP status code on a response message that indicates the successful outcome of a HTTP request. 
R1111 = An INSTANCE SHOULD use a "200 OK" HTTP status code on a response message that contains an envelope that is not a fault. 
R1112 = An INSTANCE SHOULD use either a "200 OK" or "202 Accepted" HTTP status code for a response message that does not contain a SOAP envelope but indicates the successful outcome of a HTTP request. 
R1130 = An INSTANCE MUST use the "307 Temporary Redirect" HTTP status code when redirecting a request to a different endpoint. 
R1131 = A CONSUMER MAY automatically redirect a request when it encounters a "307 Temporary Redirect" HTTP status code in a response. 
R1125 = An INSTANCE MUST use a 4xx HTTP status code for a response that indicates a problem with the format of a request. 
R1113 = An INSTANCE SHOULD use a "400 Bad Request" HTTP status code, if a HTTP request message is malformed. 
R1114 = An INSTANCE SHOULD use a "405 Method not Allowed" HTTP status code if a HTTP request message's method is not "POST". 
R1115 = An INSTANCE SHOULD use a "415 Unsupported Media Type" HTTP status code if a HTTP request message's Content-Type header field-value is not permitted by its WSDL description. 
R1126 = An INSTANCE MUST return a "500 Internal Server Error" HTTP status code if the response envelope is a Fault. 
R1120 = An INSTANCE MAY use the HTTP state mechanism ("Cookies"). 
R1122 = An INSTANCE using Cookies SHOULD conform to RFC2965. 
R1121 = An INSTANCE SHOULD NOT require consumer support for Cookies in order to function correctly. 
R1123 = The value of the cookie MUST be considered to be opaque by the CONSUMER. 
R0001 = Either an INSTANCE's WSDL 1.1 description, its UDDI binding template, or both MUST be available to an authorized consumer upon request. 
R2028 = A DESCRIPTION using the WSDL namespace (prefixed "wsdl" in this Profile) MUST be valid according to the XML Schema found at "http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd". 
R2029 = A DESCRIPTION using the WSDL SOAP binding namespace (prefixed "soapbind" in this Profile) MUST be valid according to the XML Schema found at "http://schemas.xmlsoap.org/wsdl/soap/2003-02-11.xsd". 
R2001 = A DESCRIPTION MUST only use the WSDL "import" statement to import another WSDL description. 
R2803 = In a DESCRIPTION, the namespace attribute of the wsdl:import MUST NOT be a relative URI. 
R2002 = To import XML Schema Definitions, a DESCRIPTION MUST use the XML Schema "import" statement. 
R2003 = A DESCRIPTION MUST use the XML Schema "import" statement only within the xsd:schema element of the types section. 
R2004 = In a DESCRIPTION the schemaLocation attribute of an xsd:import element MUST NOT resolve to any document whose root element is not "schema" from the namespace "http://www.w3.org/2001/XMLSchema". 
R2009 = An XML Schema directly or indirectly imported by a DESCRIPTION MAY include the Unicode Byte Order Mark (BOM). 
R2010 = An XML Schema directly or indirectly imported by a DESCRIPTION MUST use either UTF-8 or UTF-16 encoding. 
R2011 = An XML Schema directly or indirectly imported by a DESCRIPTION MUST use version 1.0 of the eXtensible Markup Language W3C Recommendation. 
R2007 = A DESCRIPTION MUST specify a non-empty location attribute on the wsdl:import element. 
R2008 = A CONSUMER MAY, but need not, retrieve a WSDL description from the URI specified in the location attribute on a wsdl:import element. 
R2022 = When they appear in a DESCRIPTION, wsdl:import elements MUST precede all other elements from the WSDL namespace except wsdl:documentation. 
R2023 = When they appear in a DESCRIPTION, wsdl:types elements MUST precede all other elements from the WSDL namespace except wsdl:documentation and wsdl:import. 
R4004 = A DESCRIPTION MUST use version 1.0 of the eXtensible Markup Language W3C Recommendation. 
R4005 = A DESCRIPTION SHOULD NOT contain the namespace declaration xmlns:xml="http://www.w3.org/XML/1998/namespace".C 
R4002 = A DESCRIPTION MAY include the Unicode Byte Order Mark (BOM).C 
R4003 = A DESCRIPTION MUST use either UTF-8 or UTF-16 encoding. 
R2005 = The targetNamespace attribute on the wsdl:definitions element of a description that is being imported MUST have same the value as the namespace attribute on the wsdl:import element in the importing DESCRIPTION. 
R2030 = In a DESCRIPTION the wsdl:documentation element MAY be present as the first child element of wsdl:import, wsdl:part and wsdl:definitions in addition to the elements cited in the WSDL1.1 specification.WSDL20 
R2025 = A DESCRIPTION containing WSDL extensions MUST NOT use them to contradict other requirements of the Profile. 
R2026 = A DESCRIPTION SHOULD NOT include extension elements with a wsdl:required attribute value of "true" on any WSDL construct (wsdl:binding, wsdl:portType, wsdl:message, wsdl:types or wsdl:import) that claims conformance to the Profile. 
R2027 = If during the processing of a description, a consumer encounters a WSDL extension element that has a wsdl:required attribute with a boolean value of "true" that the consumer does not understand or cannot process, the CONSUMER MUST fail processing. 
R2101 = A DESCRIPTION MUST NOT use QName references to WSDL components in namespaces that have been neither imported, nor defined in the referring WSDL document. 
R2102 = A QName reference to a Schema component in a DESCRIPTION MUST use the namespace defined in the targetNamespace attribute on the xsd:schema element, or to a namespace defined in the namespace attribute on an xsd:import element within the xsd:schema element. 
R2105 = All xsd:schema elements contained in a wsdl:types element of a DESCRIPTION MUST have a targetNamespace attribute with a valid and non-null value, UNLESS the xsd:schema element has xsd:import and/or xsd:annotation as its only child element(s). 
R2110 = In a DESCRIPTION, declarations MUST NOT extend or restrict the soapenc:Array type. 
R2111 = In a DESCRIPTION, declarations MUST NOT use wsdl:arrayType attribute in the type declaration. 
R2112 = In a DESCRIPTION, elements SHOULD NOT be named using the convention ArrayOfXXX. 
R2113 = An ENVELOPE MUST NOT include the soapenc:arrayType attribute. 
R2114 = The target namespace for WSDL definitions and the target namespace for schema definitions in a DESCRIPTION MAY be the same.WSDL20 
R2201 = A document-literal binding in a DESCRIPTION MUST, in each of its soapbind:body element(s), have at most one part listed in the parts attribute, if the parts attribute is specified. 
R2209 = A wsdl:binding in a DESCRIPTION SHOULD bind every wsdl:part of a wsdl:message in the wsdl:portType to which it refers with a binding extension element. 
R2210 = If a document-literal binding in a DESCRIPTION does not specify the parts attribute on a soapbind:body element, the corresponding abstract wsdl:message MUST define zero or one wsdl:parts. 
R2202 = A wsdl:binding in a DESCRIPTION MAY contain soapbind:body element(s) that specify that zero parts form the soap:Body. 
R2203 = An rpc-literal binding in a DESCRIPTION MUST refer, in its soapbind:body element(s), only to wsdl:part element(s) that have been defined using the type attribute. 
R2211 = An ENVELOPE described with an rpc-literal binding MUST NOT have the xsi:nil attribute with a value of "1" or "true" on the part accessors. 
R2207 = A wsdl:message in a DESCRIPTION MAY contain wsdl:parts that use the elements attribute provided those wsdl:parts are not referred to by a soapbind:body in an rpc-literal binding. 
R2204 = A document-literal binding in a DESCRIPTION MUST refer, in each of its soapbind:body element(s), only to wsdl:part element(s) that have been defined using the element attribute. 
R2208 = A binding in a DESCRIPTION MAY contain soapbind:header element(s) that refer to wsdl:parts in the same wsdl:message that are referred to by its soapbind:body element(s). 
R2212 = An ENVELOPE MUST contain exactly one part accessor element for each of the wsdl:part elements bound to the envelope's corresponding soapbind:body element. 
R2213 = In a doc-literal description where the value of the parts attribute of soapbind:body is an empty string, the corresponding ENVELOPE MUST have no element content in the soap:Body element. 
R2214 = In a rpc-literal description where the value of the parts attribute of soapbind:body is an empty string, the corresponding ENVELOPE MUST have no part accessor elements. 
R2205 = A wsdl:binding in a DESCRIPTION MUST refer, in each of its soapbind:header, soapbind:headerfault and soapbind:fault elements, only to wsdl:part element(s) that have been defined using the element attribute. 
R2206 = A wsdl:message in a DESCRIPTION containing a wsdl:part that uses the element attribute MUST refer, in that attribute, to a global element declaration. 
R2301 = The order of the elements in the soap:body of an ENVELOPE MUST be the same as that of the wsdl:parts in the wsdl:message that describes it. 
R2302 = A DESCRIPTION MAY use the parameterOrder attribute of an wsdl:operation element to indicate the return value and method signatures as a hint to code generators. 
R2303 = A DESCRIPTION MUST NOT use Solicit-Response and Notification type operations in a wsdl:portType definition. 
R2304 = A wsdl:portType in a DESCRIPTION MUST have operations with distinct values for their name attributes. 
R2305 = A wsdl:operation element child of a wsdl:portType element in a DESCRIPTION MUST be constructed so that the parameterOrder attribute, if present, omits at most 1 wsdl:part from the output message. 
R2306 = A wsdl:message in a DESCRIPTION MUST NOT specify both type and element attributes on the same wsdl:part. 
R2401 = A wsdl:binding element in a DESCRIPTION MUST use WSDL SOAP Binding as defined in WSDL 1.1 Section 3. 
R2701 = The wsdl:binding element in a DESCRIPTION MUST be constructed so that its soapbind:binding child element specifies the transport attribute. 
R2702 = A wsdl:binding element in a DESCRIPTION MUST specify the HTTP transport protocol with SOAP binding. Specifically, the transport attribute of its soapbind:binding child MUST have the value "http://schemas.xmlsoap.org/soap/http". 
R2705 = A wsdl:binding in a DESCRIPTION MUST either be a rpc-literal binding or a document-literal binding. 
R2706 = A wsdl:binding in a DESCRIPTION MUST use the value of "literal" for the use attribute in all soapbind:body, soapbind:fault, soapbind:header and soapbind:headerfault elements. 
R2709 = A wsdl:portType in a DESCRIPTION MAY have zero or more wsdl:bindings that refer to it, defined in the same or other WSDL documents. 
R2710 = The operations in a wsdl:binding in a DESCRIPTION MUST result in operation signatures that are different from one another. 
R2711 = A DESCRIPTION SHOULD NOT have more than one wsdl:port with the same value for the location attribute of the soapbind:address element. 
R2712 = A document-literal binding MUST be serialized as an ENVELOPE with a soap:Body whose child element is an instance of the global element declaration referenced by the corresponding wsdl:message part. 
R2714 = For one-way operations, an INSTANCE MUST NOT return a HTTP response that contains an envelope. Specifically, the HTTP response entity-body must be empty. 
R2750 = A CONSUMER MUST ignore an envelope carried in a HTTP response message in a one-way operation. 
R2727 = For one-way operations, a CONSUMER MUST NOT interpret a successful HTTP response status code (i.e., 2xx) to mean the message is valid or that the receiver would process it. 
R2716 = A document-literal binding in a DESCRIPTION MUST NOT have the namespace attribute specified on contained soapbind:body, soapbind:header, soapbind:headerfault and soapbind:fault elements. 
R2717 = An rpc-literal binding in a DESCRIPTION MUST have the namespace attribute specified, the value of which MUST be an absolute URI, on contained soapbind:body elements. 
R2726 = An rpc-literal binding in a DESCRIPTION MUST NOT have the namespace attribute specified on contained soapbind:header, soapbind:headerfault and soapbind:fault elements. 
R2718 = A wsdl:binding in a DESCRIPTION MUST have the same set of wsdl:operations as the wsdl:portType to which it refers. 
R2719 = A wsdl:binding in a DESCRIPTION MAY contain no soapbind:headerfault elements if there are no known header faults. 
R2740 = A wsdl:binding in a DESCRIPTION SHOULD contain a soapbind:fault describing each known fault. 
R2741 = A wsdl:binding in a DESCRIPTION SHOULD contain a soapbind:headerfault describing each known header fault. 
R2742 = An ENVELOPE MAY contain fault with a detail element that is not described by a soapbind:fault element in the corresponding WSDL description. 
R2743 = An ENVELOPE MAY contain the details of a header processing related fault in a SOAP header block that is not described by a soapbind:headerfault element in the corresponding WSDL description. 
R2720 = A wsdl:binding in a DESCRIPTION MUST use the part attribute with a schema type of "NMTOKEN" on all contained soapbind:header and soapbind:headerfault elements. 
R2749 = A wsdl:binding in a DESCRIPTION MUST NOT use the parts attribute on contained soapbind:header and soapbind:headerfault elements. 
R2721 = A wsdl:binding in a DESCRIPTION MUST have the name attribute specified on all contained soapbind:fault elements. 
R2754 = In a DESCRIPTION, the value of the name attribute on a soapbind:fault element MUST match the value of the name attribute on its parent wsdl:fault element. 
R2722 = A wsdl:binding in a DESCRIPTION MAY specify the use attribute on contained soapbind:fault elements. 
R2723 = If in a wsdl:binding in a DESCRIPTION the use attribute on a contained soapbind:fault element is present, its value MUST be "literal". 
R2707 = A wsdl:binding in a DESCRIPTION that contains one or more soapbind:body, soapbind:fault, soapbind:header or soapbind:headerfault elements that do not specify the use attribute MUST be interpreted as though the value "literal" had been specified in each case. 
R2724 = If an INSTANCE receives an envelope that is inconsistent with its WSDL description, it SHOULD generate a soap:Fault with a faultcode of "Client", unless a "MustUnderstand" or "VersionMismatch" fault is generated. 
R2725 = If an INSTANCE receives an envelope that is inconsistent with its WSDL description, it MUST check for "VersionMismatch", "MustUnderstand" and "Client" fault conditions in that order. 
R2729 = An ENVELOPE described with an rpc-literal binding that is a response MUST have a wrapper element whose name is the corresponding wsdl:operation name suffixed with the string "Response". 
R2735 = An ENVELOPE described with an rpc-literal binding MUST place the part accessor elements for parameters and return value in no namespace. 
R2755 = The part accessor elements in a MESSAGE described with an rpc-literal binding MUST have a local name of the same value as the name attribute of the corresponding wsdl:part element. 
R2737 = An ENVELOPE described with an rpc-literal binding MUST namespace qualify the descendents of part accessor elements for the parameters and the return value, as defined by the schema in which the part accessor types are defined. 
R2738 = An ENVELOPE MUST include all soapbind:headers specified on a wsdl:input or wsdl:output of a wsdl:operation of a wsdl:binding that describes it. 
R2739 = An ENVELOPE MAY contain SOAP header blocks that are not described in the wsdl:binding that describes it. 
R2753 = An ENVELOPE containing SOAP header blocks that are not described in the appropriate wsdl:binding MAY have the mustUnderstand attribute on such SOAP header blocks set to '1'. 
R2751 = The order of soapbind:header elements in soapbind:binding sections of a DESCRIPTION MUST be considered independent of the order of SOAP header blocks in the envelope. 
R2752 = An ENVELOPE MAY contain more than one instance of each SOAP header block for each soapbind:header element in the appropriate child of soapbind:binding in the corresponding description. 
R2744 = A HTTP request MESSAGE MUST contain a SOAPAction HTTP header field with a quoted value equal to the value of the soapAction attribute of soapbind:operation, if present in the corresponding WSDL description. 
R2745 = A HTTP request MESSAGE MUST contain a SOAPAction HTTP header field with a quoted empty string value, if in the corresponding WSDL description, the soapAction of soapbind:operation is either not present, or present with an empty string as its value. 
R2747 = A CONSUMER MUST understand and process all WSDL 1.1 SOAP Binding extension elements, irrespective of the presence or absence of the wsdl:required attribute on an extension element; and irrespective of the value of the wsdl:required attribute, when present. 
R2748 = A CONSUMER MUST NOT interpret the presence of the wsdl:required attribute on a soapbind extension element with a value of "false" to mean the extension element is optional in the envelopes generated from the WSDL description. 
R2800 = A DESCRIPTION MAY use any construct from XML Schema 1.0. 
R2801 = A DESCRIPTION MUST use XML Schema 1.0 Recommendation as the basis of user defined datatypes and structures. 
R3100 = REGDATA of type uddi:bindingTemplate representing a conformant INSTANCE MUST contain the uddi:accessPoint element. 
R3002 = REGDATA of type uddi:tModel representing a conformant Web service type MUST use WSDL as the description language. 
R3003 = REGDATA of type uddi:tModel representing a conformant Web service type MUST be categorized using the uddi:types taxonomy and a categorization of "wsdlSpec". 
R3010 = REGDATA of type uddi:tModel representing a conformant Web service type MUST follow V1.08 of the UDDI Best Practice for Using WSDL in a UDDI Registry. 
R3011 = The wsdl:binding that is referenced by REGDATA of type uddi:tModel MUST itself conform to the Profile. 
R5000 = An INSTANCE MAY require the use of HTTPS. 
R5001 = If an INSTANCE requires the use of HTTPS, the location attribute of the soapbind:address element in its wsdl:port description MUST be a URI whose scheme is "https"; otherwise it MUST be a URI whose scheme is "http". 
R5010 = An INSTANCE MAY require the use of HTTPS with mutual authentication. 
